services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: joaovitor98/bangalo-app
    container_name: app
    tty: true
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app
    networks:
      - bangalo
    environment:
      - APPLICATION_KEY=Plk6JcBo3MQ485PEeWAHTbJH342ASDAS+cPd7Ikn
      - APPLICATION_PORT=3000
      - NODE_ENV=development
      - STORAGE_SERVICE=http://storage:4000/v1
      - APPLICATION_DB_INTEGRATION=postgresql://neondb_owner:npg_PaYA6xBLQW7s@ep-crimson-snowflake-ac5qnufb-pooler.sa-east-1.aws.neon.tech/neondb?sslmode=require
      - APPLICATION_DB_INTEGRATION_DIALECT=postgres
      # - MARIADB_USER=application
      # - MARIADB_DATABASE=bangalo
      # - MARIADB_ROOT_PASSWORD=da21zg53
      # - MARIADB_PASSWORD=da21zg52
      # - MARIADB_PORT=3306
      # - MARIADB_DIALECT=mariadb
      # - MARIADB_HOST=database
    depends_on:
      - storage
      - redis
      - chatbot
      # - database
  # database:
  #   image: mariadb:10.5
  #   container_name: database
  #   command: --innodb-use-native-aio=0
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - ./cache/database:/var/lib/mysql
  #   networks:
  #     - bangalo
  #   environment:
  #     - MARIADB_USER=application
  #     - MARIADB_DATABASE=bangalo
  #     - MARIADB_PASSWORD=da21zg52
  #     - MARIADB_ROOT_PASSWORD=da21zg53
  #     - TZ=America/Sao_Paulo
  #   tty: true
  #   restart: unless-stopped
  storage:
    build:
      context: ./plugins/storage
      dockerfile: Dockerfile
    image: joaovitor98/storage-app
    container_name: storage
    tty: true
    environment:
      - APPLICATION_STORAGE_PORT=4000
      - APPLICATION_STORAGE_ACCESS=http://localhost:3000
    volumes:
      - ./plugins/storage:/usr/src/storage
    ports:
      - 4000:4000
    networks:
      - bangalo
    restart: unless-stopped
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6380:6379
    networks:
      - bangalo
    volumes:
      - /cache/redis:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
  chatbot:
    container_name: chatbot
    build:
      context: ./plugins/chatbot
      dockerfile: Dockerfile
    image: joaovitor98/chatbot-app
    ports:
      - "5000:5000"
    volumes:
      - ./plugins/chatbot/auth_data:/usr/src/app/auth_data
      - ./plugins/chatbot:/app
    environment:
      - NODE_ENV=development
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    tty: true
    networks:
      - bangalo
    restart: unless-stopped
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: joaovitor98/nginx
    container_name: nginx
    ports:
      - 8080:80
    networks:
      - bangalo
    tty: true
    restart: unless-stopped
    depends_on:
      - app

networks:
  bangalo:
    driver: bridge
